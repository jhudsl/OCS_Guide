[["index.html", "An Educator’s Guide to the Open Case Studies About this guide", " An Educator’s Guide to the Open Case Studies March, 2022 About this guide The Open Case Studies project, developed at the Johns Hopkins Data Science Lab, is an education platform that provides self-contained, multimodal, peer-reviewed, and open-source guides for real-world examples for active experiences of complete data analyses. Case study guides can be used: In the classroom (either onsite or online) by engaging students to actively participate in a hands-on problem-solving experience. Outside of the classroom by providing an archive of stand-alone examples of best practices. To help guide educators on how to most effectively use the Open Case Studies (either in or outside of the classroom), this guide documents various entry points to using the case studies (including an R package to enable modular use of the case studies), examples of how to use the case studies, how to modify and adapt components of the case studies for the classroom, and how to contribute new case studies. "],["introduction.html", "Chapter 1 Introduction 1.1 Learning Objectives 1.2 Motivation 1.3 Target Audience 1.4 Curriculum 1.5 Open Case Studies Philosophy 1.6 Open Case Studies Anatomy 1.7 Starter Kit 1.8 Feedback 1.9 Contact Us", " Chapter 1 Introduction 1.1 Learning Objectives In this chapter we will: Describe the audience for this guide Discuss what you can expect in this guide Introduce to the Open Case Studies project Introduce the case studies that make up this project 1.2 Motivation The Open Case Studies project, developed at the Johns Hopkins Data Science Lab, is an education platform that provides self-contained, multimodal, peer-reviewed, and open-source guides for real-world examples for active experiences of complete data analyses. The intention of this guide is to provide instructors more information about how to make the most of our case studies. 1.3 Target Audience This guide is intended for educators who are interested in using Open Case Studies for instruction. Elements of the case studies can be helpful for instructors who teach: High school students Undergraduate students Graduate students Elements of the case studies can assist with teaching courses about the following topics: Data science Statistics Public health Programming Technical writing … and more 1.4 Curriculum This guide documents: The Open Case Studies philosophy The general structure of case studies Various entry points to using the case studies (including an R package to enable modular use of the case studies) Examples of how to use the case studies Instructions on how to modify and adapt components of the case studies for the classroom Guidelines for contributing new case studies 1.5 Open Case Studies Philosophy The Open Case Studies project is an educational resource that educators can use in the classroom to teach students how to effectively derive knowledge from data in real-world challenges. Case studies of the Open Case Studies project provide independent learners and educators with resources for data science education. The case studies use realistic data from sources that are used for actual research or public health initiatives. Each case study addresses a timely and interesting topic, in an effort to make the material more engaging and relevant. Case studies of the project are not intended to show all aspects of the research process, and we do not claim that the analyses show the most appropriate way to analyze a given data set, however case studies are intended to demonstrate the decision making process of real data analyses, the basic challenges of analyses, to show examples of applications of data methods, and to provide context for when such methods could be applied to glean information from data. We hope to demonstrate best practices for mindful data cleaning, reproducibility, and effective data science communication. All case study materials are open source and free. We provide transparency about where the data came from and where possible how it was produced. We cover data and data method limitations. We try to be as complete as possible to provide users with all necessary steps to understand the analysis and to provide context, while also maintaining a reasonable length. Our case studies can be used for small additional assignments in a classroom setting or as the main content that educators can slowly work through with students. We hope you find our case studies useful! 1.5.1 What problem are we addressing? Despite unprecedented and growing interest in data science on campuses, there are few courses and course materials that provide meaningful opportunity for students to learn about real-world challenges. Most courses frequently fail to frame the lectures around a real-world application and provide unrealistically clean datasets that fit the assumptions of the methods in an unrealistic way. The result is that students are left unable to effectively analyze data and solve real-world challenges outside of the classroom. 1.5.2 Problems with previously suggested solutions In 1999, Nolan and Speed argued the solution was to teach courses through in-depth case studies derived from interesting problems, with nontrivial solutions that leave room for different analyses. This innovative framework teaches the student to make important connections between the scientific question, data and statistical concepts that only come from hands-on experience analyzing data. However, these case studies based on realistic challenges, not toy examples, are scarce. Furthermore they are often open-ended without a single complete full example. This can make it challenging for instructors who are new to these topics or have limited time. 1.5.3 What are we proposing as a solution? To address this, we are developing the Open Case Studies educational resource of case studies, which demonstrate illustrative complete data analyses that can be used in and outside the classroom to teach learners how to effectively derive knowledge from data. Our case studies have successfully been used to teach data science and statistics courses to graduate and undergraduate students at: Johns Hopkins Bloomberg School of Public Health Johns Hopkins University University of California Santa Barbara If you’d like to learn more about the Open Case Studies you can read this thesis by former graduate student Michael Breshock Breshock (2021). 1.6 Open Case Studies Anatomy Case studies are designed to be self-contained examples of complete data analyses. They start with a subject area of interest and a problem definition. Each case study is composed of three main stages: 1.6.1 Stage 1: Getting Started In the first stage, students learn about the subject area they will be investigating in their data analysis. This can include historical perspectives, previous literature, and current overarching questions in the field. Ideally, this will provide motivation as to why the data analysis they will be performing is interesting and useful. Students will then further refine questions of interest and define a specific question to be investigated by the data at hand. This question will define the statistical and data science learning objectives for the case study. Finally, students will explore the limitations of their investigation and discuss why their data analysis may or may not be able to fully answer the main question of interest. Case study context Study motivation Main question Learning objectives Study limitations 1.6.2 Stage 2: Analyzing the Data This stage includes the bulk of the data analysis. It begins with a detailed description of the data used in the case study, how it was generated, and where is was obtained. This sets the stage for a walk-through of the data import procedure and exploration of the available data. From there, the specific subsets of the data relevant to answering the main question of interest can be identified and the data can be cleaned and wrangled to give the data in the format needed for analysis. The cleaned data can then be visualized and analyzed to answer the study question. Data description Import and exploration Wrangling Visualization Analysis 1.6.3 Stage 3: Wrapping-Up In the final stage of the case study, students synthesize conclusions to the main study question based on the results of their data analysis. They summarize the data exploration and analysis steps they took and discuss potential next steps they could take based on their results. Finally, additional analyses are suggested as homework and additional information relevant to the case study is provided. Analysis conclusions Case study summary Next steps Homework 1.6.4 Table of Contents This anatomy is reflected in the table of contents of case study sections: Case Study Section Description Motivation Motivating figure and text at the start of the case study Main questions Scientific question(s) Learning objectives Both data science and statistics learning objectives Context Context of question(s) or data Limitations Any limitations in case study or with data used What are the data? Summary of where the data came from and what the data contain Data import Analyses for importing data Data wrangling Analyses for wrangling data Data exploration Analyses for data exploration Data visualization Analyses for data visualization Data analysis Analyses containing statistical concepts and methods to answer question(s) Summary Summary of results and conclusion Suggested homework Question(s) to explore further Additional information Helpful links and packages used The table of contents can be used to navigate to specific sections in a case study: 1.7 Starter Kit Open Case Studies are designed to be beginner friendly. Users can work through an entire case study with no prerequisite knowledge in programming, public health, or statistics. However, the appropriate technology, software, and a basic familiarity with R Studio is required. This section will detail what students will need to be able to jump into a case study. 1.7.1 Technical Requirements All case studies use the R statistical programming language for data analysis. R is available for Windows, Mac, and Linux and can be downloaded from the The Comprehensive R Archive Network (CRAN). While there is no specific R version requirement for the case studies, the OCSdata package, which can be used to download the data, requires R version 3.5 or higher. Furthermore, R packages used to run specific analyses in each case study may have their own R version requirements. R version requirements may be checked in the Session Info section in each case study. Cheat sheets detailing how to use common packages and functions are available at the RStudio website. Please note that to install R version 3.5 and higher you will need to have a web browser and a compatible operating system. See this link for more information. Case Study Compilation Times The following table lists the time it took for RMarkdown to compile each case study using the “Knit” button in RStudio. Case Study Compilation Time (seconds) School Shootings in the United States 29 - 39 Disparities in Youth Disconnection 36 - 46 Opioids in United States 103 - 113 Vaping Behaviors in American Youth 107 - 117 Mental Health of American Youth 35 - 45 Exploring global patterns of obesity across rural and urban regions 31 - 41 Influence of Multicollinearity on Measured Impact of Right-to-Carry Gun Laws Part 1 ??? Influence of Multicollinearity on Measured Impact of Right-to-Carry Gun Laws Part 2 39 - 49 Exploring CO2 emissions across time 36 - 46 Exploring global patterns of dietary behaviors associated with health risk 79 - 89 Predicting Annual Air Pollution ??? These compilation times were measured on a PC machine operating on Windows 10. The ranges listed should only be used as estimates as compilation time will vary with different machines and operating systems. 1.7.2 RStudio To work with R, we recommend the RStudio Integrated Development Environment. RStudio includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management. RStudio is available in open source and commercial editions and runs on the desktop (Windows, Mac, and Linux) or in a browser connected to RStudio Server. More information and program installation instruction are available at the RStudio website. For reproducible data analyses and easy publishing of reports and presentations, we recommend using RMarkdown. More information about RMarkdown is also available at the RStudio website. 1.7.3 GitHub Open Case Studies is hosted on GitHub. GitHub is a website and cloud service that enables developers to store, manage, and track changes to their code. OCS uses GitHub for both development and distribution purposes. Users have complete access to all case study material through our OCS GitHub page where each case study is hosted in an individual repository. The repository contains all the materials needed for the case study. This includes the case study text to be distributed to students, the data used in the case study (discussed below), additional documents and references, and brief guidelines on case study use. While GitHub is not needed for users to access the case studies, users can use GitHub to streamline download and modification of case studies. Check out the GitHub Organization and OCSdata sections in Chapter 2 for more details on how to use GitHub to access case studies and modify content for personalized use. An introduction on how to get started with GitHub is available at Happy Git. 1.8 Feedback We are continually working to improve the Open Case Studies project to address learner and educator needs. Feedback is essential for this goal. If you use Open Case Studies material, we would love to hear from you! 1.8.1 Survey Please consider participating in our user experience survey. We appreciate feedback about all aspects of the OCS user experience including but not limited to technical challenges, potential improvements, or new ideas on how to use the case studies in the classroom. 1.8.2 Feedback for this Guide If you have feedback for this guide about how we can improve the content, please see here. 1.9 Contact Us If you have any questions, suggestions for improvement for individual case studies, ideas, or thoughts, you can contact us through email using this form: Your email: Your message: Send Also, see the final chapter for information on submitting case studies to our collection. You can also find us on Twitter with the following handle: @OpenCaseStudies References "],["open-case-study-infrastructure.html", "Chapter 2 Open Case Study Infrastructure 2.1 Learning Objectives 2.2 OCS Website 2.3 Feedback 2.4 OCS Case Study Search Tool 2.5 Open Case Studies GitHub Organization 2.6 OCSdata 2.7 Session info", " Chapter 2 Open Case Study Infrastructure 2.1 Learning Objectives In this chapter we will discuss the overall infrastructure of the Open Case Studies platform, which includes: The Open Case Studies (OCS) website Methods to provide feedback A search tool to find case studies The OCS GitHub organization Our R package called OCSdata 2.2 OCS Website The OpenCaseStudies website describes the mission of the Open Case Studies project, the history of its inception, current and previous members of the OCS team, an archive of talks and blog posts and other information. Links to all of our case studies can be found on the Open Case Studies website. The case studies are listed in a searchable table that will be detailed further in the following section. 2.3 Feedback We are continually striving to make our case studies better. Please contact us if you have ideas for suggestions for the project or new ideas for how case studies can be used in the classroom. Also please let us know if you notice typos or errors, or if you are interested in getting involved. 2.3.1 Email Form The website contains a contact email form that may be used to send a message to Open Case Studies to ask a question or provide suggestions. 2.3.2 Survey There is also a survey available on our website and also within the case studies themselves that allows us to do research on case study use. The survey should take no more than 10 minutes to complete. Your feedback helps us learn more about how to improve the data science education experience. Part of this includes getting a better understanding of who is using our case studies and how so that we can better design our case studies. We would greatly appreciate you filling it out if you have the time! 2.4 OCS Case Study Search Tool The website also includes the case study search tool to aid instructors in finding appropriate case studies for their learning objectives. Accessing the search tool and how to use it is described in more detail below. This diagram illustrates the workflow of accessing a case study from the OCS website through the case study search table. From the table, users can use the provided links to view the original static case studies, interactive case studies, and the GitHub repositories for each. Users may find all case study source files in the case study repository, as well as instructions on how to use the case study. 2.4.1 Interactive Case Studies The interactive versions of the case studies are a recent development. These versions include live tutorials through quizzes and interactive coding exercises with real-time feedback. The interactive case studies were made using the learnr and gradethis packages. If you’d like to learn more about the interactive case studies, graduate student Qier Meng discusses the interactive versions in further detail in the video below: If you’d like to learn more about the interactive case studies you can read this thesis by former graduate student Michael Breshock Breshock (2021). The Open Case Study Search tool can be found at the bottom of the OCS Website. The tool consists of a table with searchable columns and each row describing an individual case study. This searchable table is designed to aid instructors in identifying appropriate case studies for their learning objectives. The columns are organized as such: The “Case Study” column contains the case study name and a link to the static and interactive versions of the case study (if available) The “GitHub Repository” column provides links to the case study’s associated GitHub repository that contains all case study source files, data, code, and more The “Packages” column details all the R packages used in the case study, and can help identify if a case study teaches a specific data import, wrangling, analysis, or visualization skill The “Objectives” column details the learning objectives of each case study (e.g. importing data from PDF files, reshaping data, specific statistical analysis, etc.) The “Category” column lists the source of funding or project that the case study is associated with The main two columns likely to be helpful in identifying appropriate case studies are the “Packages” and “Objectives” columns. Users may search for keywords across all columns using the overall search bar, otherwise users can search individual columns of interest. This table can be used to access all case study resources: This video provides a live demonstration on how to use the search tool: 2.5 Open Case Studies GitHub Organization GitHub is a website and cloud service that enables developers to store, manage, and track changes to their code. OCS uses GitHub for both development and distribution purposes. Users have complete access to all case study material through our OCS GitHub page where each case study is hosted in an individual repository. The repository contains all the materials needed for the case study. This includes the case study text to be distributed to students, the data used in the case study (discussed below), additional documents and references, and brief guidelines on case study use. Data included in the GitHub repository is available in multiple formats to enable modular use of the case studies. This diagram explains the case study data folder structure and how data is categorized into different sub-folders: Data included in the GitHub repository is available in multiple formats to facilitate modularization of the case studies as described below. To use the case study data, you can download the GitHub repository directly or use the OCSdata R package described below. 2.6 OCSdata To simplify the process of accessing the data required for each case study, we have created the OCSdata R package. Briefly, the OCSdata package creates a new folder called “OCSdata” where it downloads the data needed for a specific case study. Users can download the data in its original raw format or in various processed formats that correspond to different stages of data wrangling and cleaning. This allows users to perform the data exploration and wrangling or the data visualization and analysis sections of the case study without having to process the data from the raw files. For some of the case studies, the OCSdata package also downloads extra source data that is not used in the case study. The following are the main functions to import data in various formats using the OCSdata package. Each function is described in more detail in the OCSdata package documentation. Data Folder Case Study Section OCSdata Function raw Data Import raw_data imported Data Exploration, Data Wrangling imported_data wrangled Data Visualization, Data Analysis wrangled_csv, wrangled_rda simpler_import Data Import simpler_import_data extra Suggested Homework (?) extra_data The package source files and documentation are also available on GitHub. 2.6.1 Getting Started with OCSdata The OCSdata package is available on the package repository CRAN. It requires R 3.5 or higher and can be installed in R as follows: install.packages(&quot;OCSdata&quot;) #only run once to install package library(OCSdata) #run every new R session to load package 2.6.2 Downloading raw data The raw_data function will download the raw data files that can be imported into R. The first argument is the name of the case study. A list of case study names can be found in the package documentation online or by typing ?raw_data in R. The outpath argument is a string specifying the folder where the data should be downloaded. To download the data to a folder named “OCS_data” in the current working directory, you can supply getwd() to the output argument. If nothing is provided for the argument, you will be prompted to enter 1, 2, or 3 to download the data into the current director, to specify the download path, or to cancel, respectively. In the following example, we download the raw data for the “Opioids in the United States” case study to the current directory. raw_data(&quot;ocs-bp-opioid-rural-urban&quot;, outpath = getwd()) 2.6.3 Downloading data in other formats The OCSdata package can be used to download the data in various processed formats that may be helpful in skipping certain case study sections and focusing on data wrangling and/or analysis and visualization. All of the functions take the same arguments described above. 2.6.3.1 Simpler import The simpler_import_data() function will download raw data files that have been converted to file formats that are easier to import into R, typically .csv. Some case studies offer this option when the original raw files require a more complicated import step. simpler_import_data(&quot;ocs-bp-opioid-rural-urban&quot;, outpath = getwd()) 2.6.3.2 Importing data as R objects The imported_data() function will download raw data files in .rda format. This means the data have already been imported into R objects. This can be used to skip the data import section and start directly with data wrangling. The R objects files can be imported into R by either double clicking on the files in RStudio or using the load() function as follows. imported_data(&quot;ocs-bp-opioid-rural-urban&quot;, outpath = getwd()) #download data in .rda format file_path = &quot;~/OCS_data/data/imported/land_area.rda&quot; #specify download directory load(file_path) #load R objects 2.6.3.3 Importing wrangled data The following functions will download the data files that have already been wrangled and are ready to be analyzed. These come in both .csv and .rda formats. Download as csv files: wrangled_csv(&quot;ocs-bp-opioid-rural-urban&quot;, outpath = getwd()) Downloading as R objects: wrangled_rda(&quot;ocs-bp-opioid-rural-urban&quot;, outpath = getwd()) 2.6.4 Downloading extra data Some case studies have extra data are not used in the case study but can be used to explore the case study subject from different perspectives. These data but can This data can be downloaded using the extra_data() function. extra_data(&quot;ocs-bp-opioid-rural-urban&quot;, outpath = getwd()) 2.6.5 Downloading all case study data The zip_ocs() function will download the all of the repository files in a .zip folder and unzip them into a specified directory. This includes the case study data in all the formats detailed above (raw, simpler_import, imported, wrangled, and extra). It also includes the case study .Rmd file, which can be modified by instructors as needed. We recommend using this method over cloning or forking (terms that you may be familiar with if you are familiar with Git and GitHub), as this will not result in the user getting all of our git history. If you choose to fork the repository you will automatically generate a repository on GitHub and your repository will have connections to the original case study. This can be helpful for pulling any changes to the original case study. It can also be helpful if you want to send edits to the original case study in the form of what is called a pull request. If you clone the case study repository, you can set it up on GitHub as well with a few more steps and you will not preserve any connection to the original case study repository. Again, don’t worry if all these terms are new to you. You can just use the zip_ocs() function instead. Otherwise take a look at Hester (n.d.) to learn more. zip_ocs(&quot;ocs-bp-opioid-rural-urban&quot;, outpath = getwd()) 2.6.6 Fork or clone the case study repository If instead users are familiar with Git and GitHub and want to fork or clone the case study repository, this can also easily be done using the OCSdata package. The clone_ocs() function of the OCSdata package can be used to do either. If the fork_repo function is set to TRUE it will fork the repo, otherwise, by default, it will clone the repository. These functions will result in the same outcome as using GitHub to clone or fork the repo. Again you can also specify the outpath location as in the previous description about the zip_ocs() function. # clone a repository OCSdata::clone_ocs(casestudy = &quot;ocs-bp-diet&quot;) #fork a repository OCSdata::clone_ocs(casestudy = &quot;ocs-bp-diet&quot;, fork_repo = &quot;TRUE&quot;) However, using these functions will involve the users getting all of our git history so we suggest that users use the zip_ocs() function (described in the above section) of OCSdata instead. If you’d like to learn more about the OCSdata package or the OCS GitHub organization page, you can read this thesis by former graduate student Michael Breshock Breshock (2021). 2.7 Session info ## R version 4.0.2 (2020-06-22) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.3 LTS ## ## Matrix products: default ## BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C ## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.24 digest_0.6.25 crayon_1.3.4 R6_2.4.1 ## [5] lifecycle_1.0.0 magrittr_2.0.2 evaluate_0.14 highr_0.8 ## [9] pillar_1.4.6 stringi_1.5.3 rlang_0.4.10 fs_1.5.0 ## [13] jquerylib_0.1.4 vctrs_0.3.4 ellipsis_0.3.1 rmarkdown_2.10 ## [17] tools_4.0.2 stringr_1.4.0 readr_1.4.0 hms_0.5.3 ## [21] yaml_2.2.1 xfun_0.26 compiler_4.0.2 pkgconfig_2.0.3 ## [25] htmltools_0.5.0 ottrpal_0.1.2 knitr_1.33 tibble_3.0.3 References "],["use-of-open-case-studies.html", "Chapter 3 Use of Open Case Studies 3.1 Learning Objectives 3.2 Open Case Studies in the Classroom 3.3 Case Study Recommendations 3.4 Example Use Cases 3.5 Examples of assignments 3.6 Session info", " Chapter 3 Use of Open Case Studies 3.1 Learning Objectives This chapter will provide guidance on how to use Open Case Studies for instruction. We will give a coarse guide on which case studies include material appropriate for beginner, intermediate, or advanced learners. We will describe ways that instructors can use full case studies, part of a case study, or just the data. We will present ways in which others have used the case studies. We will present some examples of extensions that can accompany the case studies and can serve as a template for homework assignments or independent student exploration. The examples presented in this chapter are merely suggestions - modifications to the case studies to fit student needs are expected and encouraged! If you come up with a different way to use the case studies, please let us know what you come up with so that other educators may be inspired by your creativity. 3.1.1 Prerequisites 3.1.1.1 Public Health Subject Matter The case studies in Open Case Studies generally deal with topics in public health. We do not require any prior knowledge on the public health subjects examined in the case studies. The Getting Started section in each case study (specifically, the case study context) will present the subject material relevant to understanding the data and the case study implications. 3.1.1.2 Statistics The case studies cover a range of statistical approaches and skillsets. Some case studies will build on more foundational statistical concepts. The Experience Level categorization for each case study (see the case study recommendation section) will indicate the expected prior skills that the case study will expect. Furthermore, the exact skills that the case study will use are listed in the Case Study Search Tool under the Objectives column. 3.1.1.3 Coding/Data Science All case studies use the R statistical programming language for data analysis. Some familiarity with R basics is expected for effective use of the case studies. However, depending on the data used and the extent to which it needs to be cleaned and processed before analysis, each case study may require experience with additional programming and data wrangling skills. This will be indicated by the Experience Level designation for the case study (case study recommendation section). 3.1.1.4 Software All case studies use the R statistical programming language for data analysis. While there is no specific R version requirement for the case studies, the OCSdata package, which can be used to get and load the data, does require R 3.5. Furthermore, R packages used to run specific analyses in each case study may have their own R version requirements. R version requirements may be checked in the sessionInfo() section in each case study. 3.1.2 Experience Level Descriptions The table below explains how we define the beginner, intermediate, and advanced experience levels. Experience Level Description Beginner Little to no previous experience with coding and/or statistical analysis. Intermediate Familiar with at least one programming language and has experience working with data and statistics. Advanced Fluent in at least one programming language and likely familiar with more. Has a depth of experience working with data science projects. Typically, most middle/high school and first year undergraduate students will fit in the beginner category. Upperclassmen undergraduates and some graduate students are often at the intermediate level. Most advanced level students will be at the graduate level. However, this is a generalization, and a student may be considered beginner, intermediate, or advanced at any academic level depending on their independent studies and experiences. 3.2 Open Case Studies in the Classroom The case studies are structured to support both partial and full use of a case study. Educators are also free to use case study data by itself. 3.2.1 Teaching a Full Case Study The case studies are written to provide a cohesive story that simulates data science in the real world. Reading through an entire case study is an excellent exercise for students to experience a standard data science workflow and learn the best practices of today from start to finish. The following list provides a few examples of how educators have used a full case study in the past: Converted the case study into a slide deck (Practical Data Science in R taught by Dr. Shannon Ellis at University of California Santa Barbara) Assigned students to read the case study and write a report as homework (Advanced Data Science course at Johns Hopkins) Assigned students to extend analysis beyond case study (Advanced Data Science course at Johns Hopkins) Case Study Reading Time and Readability Index The reading time and readability index were calculated for each case study with koRpus. A readability index estimates the reading difficulty level of a particular text. The following table lists the reading time and the Flesch-Kincaid readability index for each case study. This information may be useful for deciding which case study to use in your curriculum. Based on the course taught by Dr. Ellis, in which the case studies were used for lecture material, it appears that for intermediate level data science students, a 10 week course could cover 2 longer case studies or 3 shorter case studies. How long a case study will take however, will depend on the experience level of the students. Case Study Reading Time (minutes) Readability Index (Flesch-Kincaid) School Shootings in the United States 110 Grade 9, Age 14 Disparities in Youth Disconnection 85 Grade 8, Age 13 Opioids in United States 90 Grade 9, Age 14 Vaping Behaviors in American Youth 75 Grade 10, Age 15 Mental Health of American Youth 90 Grade 8, Age 13 Exploring global patterns of obesity across rural and urban regions 70 Grade 9, Age 14 Influence of Multicollinearity on Measured Impact of Right-to-Carry Gun Laws Part 1 55 Grade 9, Age 14 Influence of Multicollinearity on Measured Impact of Right-to-Carry Gun Laws Part 2 60 Grade 11, Age 16 Exploring CO2 emissions across time 70 Grade 9, Age 14 Exploring global patterns of dietary behaviors associated with health risk 100 Grade 10, Age 15 Predicting Annual Air Pollution 95 Grade 10, Age 15 3.2.2 Teaching Part of a Case Study Some educators may find that only certain sections of a case study are relevant to their course learning objectives. For these educators the case studies are structured to allow for modular use. The case study GitHub repositories provide the appropriate data files to be used at the start of each section. These data files can be downloaded directly from GitHub or with the OCSdata package (see the OCSdata section in chapter 2). The following table describes which data folder contains the corresponding data for each case study section. An example use for each data type is provided as well. Data Folder Case Study Section Example Use raw Data Import Assigning public health students to read through a case study starting from the beginning imported Data Exploration, Data Wrangling Data science students practicing wrangling methods with in class exercises wrangled Data Visualization, Data Analysis Statistics course practicing analysis methods with real data as a live lesson simpler_import Data Import Introductory data science instructor wants students to practice data import without over-complication extra Not Used in Case Study Public health course assigns homework to practice case study methods with similar but new data 3.2.3 Teaching With Case Study Data Only Educators can use the data available with the case studies without using the case study as a whole. The data is available on GitHub and can be accessed using the OCSdata R package. 3.3 Case Study Recommendations Each case study demonstrates an entire data analysis starting from data import and wrangling and continuing to statistical analysis and data visualization. This means that individual case studies can often incorporate different skill levels for different stages of the analyses. For example, a case study can use advanced data wrangling approaches but only need beginner level statistical analysis methods. Below we provide broad categorizations of each of the case studies in terms of the skill levels required (beginner, intermediate, or advanced) for each of the general stages of the case studies (data wrangling, data visualization, and statistics). More details on the specific skills taught in each case study can be found in the Case Study Search Tool or in the Learning Objectives section in each case study. Here, we are using the following interpretations of “beginner”, “intermediate”, and “advanced”: Skill Level Data Import Data Wrangling Data Visualization Statistics Beginner No experience with importing data into any programming language No experience wrangling and cleaning raw data in any programming language No experience visualizing data in any programming language No experience with statistical concepts Intermediate Some experience with importing common data formats (e.g. CSVs) into R or significant experience in another programming language Some experience wrangling or cleaning raw data in common formats (e.g. numerical data) in R or significant experience in another programming language Some experience with common visualization packages in R (e.g. ggplot) or significant experience in another programming language Some familiarity with common statistical concepts (e.g. summary statistics, hypothesis testing) and techniques (e.g. t-test) Advanced Experience with importing uncommon data types (e.g. PDFs or web-scraping) and comfort with troubleshooting import challenges Experience cleaning and wrangling raw data in uncommon formats (e.g. regular expressions) in R and comfort with troubleshooting wrangling challenges Experience with creating complex data visualizations in R and comfort with visualization challenges Good understanding of foundational statistical concepts and comfort with applying foundational statistical techniques The following table lists a few example case studies that would be suitable for each experience level. Case Study Data Import Data Wrangling Data Visualization Statistics School Shootings in the United States Intermediate Beginner Advanced Beginner Disparities in Youth Disconnection Intermediate Beginner Beginner Beginner Opioids in United States Intermediate Beginner Beginner Intermediate Vaping Behaviors in American Youth Beginner Beginner Beginner Intermediate Mental Health of American Youth Advanced Beginner Beginner Beginner Exploring global patterns of obesity across rural and urban regions Intermediate Beginner Beginner Beginner Influence of Multicollinearity on Measured Impact of Right-to-Carry Gun Laws - Part 1 Beginner Advanced NA NA Influence of Multicollinearity on Measured Impact of Right-to-Carry Gun Laws - Part 2 NA NA Intermediate Advanced Exploring CO2 emissions across time Beginner Beginner Beginner Beginner Exploring global patterns of dietary behaviors associated with health risk Intermediate Intermediate Intermediate Intermediate Predicting Annual Air Pollution Beginner Beginner Intermediate Advanced Exploring health expenditure using state-level data in the United States Beginner Beginner Beginner Beginner 3.4 Example Use Cases Because the case studies were developed to be modular and stand-alone, they can be used in a variety of ways that cater to the learner’s goals, experience, and interests. Below, we provide a few examples of how case studies have been used previously. If you use Open Case Studies in a new way, we would love to hear about it! 3.4.1 Using Case Studies as Lecture Content Practical Data Science in R is a 10-week intermediate undergraduate course taught by Dr. Shannon Ellis at University of California Santa Barbara. In 2021, Dr. Ellis taught the course using three Open Case Studies and used them to illustrate how foundational data science skills and statistical concepts taught throughout the course can be applied to real data. Here you can see how the course used the OCSdata package: Dr. Ellis incorporated labs and homework assignments into the course, which had guided coding and analysis exercises related to the concepts discussed in lecture which used content from the case studies in a slide format. She also assigned written reports where students presented the analysis they conducted related to the case study in the format of a scientific article (see example assignment below). 3.4.2 Using Case Studies for Assignments Advanced Data Science was a semester-long graduate data science course taught by Dr. Jeff Leek and Dr. Roger Peng in 2020 at Johns Hopkins Bloomberg School of Public Health, primarily for PhD students. This course is designed for students to gain experience in designing and communicating data analyses effectively and critically analyzing analyses. Assignments included writing scientific journal sections (e.g. Introduction, Methods, Results, Discussion) based on the case studies and extending analyses based on results presented in the case study. 3.4.3 Independent Study Case studies can be used for learners to gain experience in statistics and data science independently. We strongly recommend that independent learners aim to actively engage with the case study by running the analyses independently, exploring the data beyond what is presented in the case study, and extending the analyses by to investigate their own hypotheses. Furthermore, creating a finished product, such as a blog post or a presentation, can be an excellent demonstration of the skills learned. 3.4.4 Interactive Case Studies Some of the case studies also have interactive versions. These versions allow students to write and run code in the browser interactively, with hints and answers available for students to check their progress as they go through the case study. Interactive case studies could be appropriate for independent learning or for in class labs, as they provide real time feedback and can reduce demands on the educator to provide intensive personalized feedback. Please see the following video for a demonstration on how to use the interactive case studies: 3.5 Examples of assignments Educators are not limited to having the students go through the case study in their current format. Case studies can be a spring board for further exploration and additional assignments. For example, in addition to helping students develop data analysis skills, we hope that the case studies can also help students develop their curiosity, technical writing and communication skills. Additional assignments can include but is not limited to data visualization and presentation, written reports, and oral presentations. Below we provide a few examples of potential assignments that educators can use to tailor instruction to the desired learning objectives. See here guidelines about considerations for effective and ethical data visualizations from the Advanced Data Science Course taught by Jeff leek and Roger Peng at Johns Hopkins Bloomberg School of Public Health. 3.5.1 Written Report Below is an example of a scientific-style paper written based on the Opioid Use Case Study. We also include an example rubric by which this paper can be evaluated adapted from here. OCS Example Report Assignment Guide OCS Opioid Use in the US Example Report OCS Opioid Use in the US Example Report Rubric 3.5.2 Oral Presentation Below is an example of a presentation based on the Vaping Behaviors in American Youth Case Study. This presentation focuses on the context of the study and the methods used in the analysis. Assignments for presentations can be modified to emphasize presenting results and conclusions or to emphasize communication to different audiences (e.g. policy makers, other researchers, the public, etc. ). OCS Vaping Case Study Oral Presentation Assignment Example OCS Vaping Case Study Oral Presentation Example 3.5.3 Data Visualization The data visualizations included in the case studies are not the only way to present the data used within the analyses. While the principles of effective data visualization are a focus of the case studies, the data included as well as the study questions can be used to guide students through the design choices that are commonly considered when determining how to best present data. Students can be assigned to create a new visualization beyond what is included in the case studies that emphasizes different aspects in the data. 3.5.4 Further Exploration Several case studies have additional data that is not discussed. This can be used for further exploration of the subject area that was discussed in the case study. This can be guided by the questions included in the Homework section of the case studies. Case studies that have additional data include the Opioid Use Case Study, the Right to Carry Case Study, and the CO2 Emissions Case Study. Below is an example of an assignment assigned to students in the Advanced Data Science Course at Johns Hopkins. In this assignment students were asked to create a simpler machine learning analysis based on the case study. They were also asked to share their analysis with another student and write a summary and critique of the other student’s analysis. This provides an opportunity for the student to try out analysis skills with their own analysis work, and also work on their comprehension skills of reading other people’s work. It also shows how we can get different results with minor changes in our analyses.: OCS Air Pollution Extension Assignment Example Acknowledgments We would like to thank the following people for generously sharing the ways in which they used Open Case Studies materials in their teaching: Dr. Shannon Ellis Dr. Jeff Leek Dr. Roger Peng 3.6 Session info ## R version 4.0.2 (2020-06-22) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.3 LTS ## ## Matrix products: default ## BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C ## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.24 digest_0.6.25 crayon_1.3.4 R6_2.4.1 ## [5] lifecycle_1.0.0 magrittr_2.0.2 evaluate_0.14 highr_0.8 ## [9] pillar_1.4.6 stringi_1.5.3 rlang_0.4.10 fs_1.5.0 ## [13] jquerylib_0.1.4 vctrs_0.3.4 ellipsis_0.3.1 rmarkdown_2.10 ## [17] tools_4.0.2 stringr_1.4.0 readr_1.4.0 hms_0.5.3 ## [21] yaml_2.2.1 xfun_0.26 compiler_4.0.2 pkgconfig_2.0.3 ## [25] htmltools_0.5.0 ottrpal_0.1.2 knitr_1.33 tibble_3.0.3 "],["modifying-open-case-studies.html", "Chapter 4 Modifying open case studies 4.1 Learning Objectives 4.2 Modular use 4.3 Modify a case study 4.4 Create a case study 4.5 Session info", " Chapter 4 Modifying open case studies 4.1 Learning Objectives This chapter will cover how to modify the case studies to your own needs using the following methods: Modular case study use with the help of the OCSdata package Modifying a case study with GitHub and RStudio Creating your own case study with our template and MakeCaseStudies 4.2 Modular use Some educators may find that only certain sections of a case study are relevant to their specific needs. For example, a statistics teacher may want students to practice the skills covered in the data analysis section, but doesn’t have time to go through the whole case study. The case studies are designed to allow for such use. This educator and their students may jump right in to any case study section without working through any previous sections. This is made possible because the data files are saved at the end of each section. These data files are made available on the case study’s GitHub repository and may also be downloaded with the help of the OCSdata package. See Chapter 2 for more details on the structure and organization of a case study data folder. The table below explains which data sub-folder and package function to use for each case study section. Data Folder Case Study Section OCSdata Function raw Data Import raw_data imported Data Exploration, Data Wrangling imported_data wrangled Data Visualization, Data Analysis wrangled_csv, wrangled_rda simpler_import Data Import simpler_import_data extra Suggested Homework (?) extra_data If you’d like to learn more about modular use of Open Case Studies you can read this thesis by former graduate student Michael Breshock Breshock (2021). 4.2.1 Example of Modular Use The following steps illustrate how one would skip to a specific case study section. The data analysis section from the “Opioids in United States” case study is used for this example, but these directions apply for any section in any case study. 4.2.1.1 Steps for modular use Use the table of contents to navigate to the section of interest. Click on the arrow that reads “If you skipped the previous sections click here.” Follow the instructions provided to download the data files from the previous section either with OCSdata or manually through GitHub. We will now demonstrate each option. 4.2.1.2 Downloading data with OCSdata: First install and load the OCSdata package: install.packages(&quot;OCSdata&quot;) #only run once to install package library(OCSdata) #run every new R session to load package Now download the wrangled data into your R environment using the following function command: wrangled_rda(&quot;ocs-bp-opioid-rural-urban&quot;, outpath = getwd()) This command will download the wrangled data in .RDA format. You may also be downloaded wrangled data in .CSV format by replacing ‘wrangled_rda’ with ‘wrangled_csv’ Load the RDA files with the following commands: load(file = here::here(&quot;OCS_data&quot;, &quot;data&quot;, &quot;wrangled&quot;, &quot;Annual_opioid_data.rda&quot;)) load(file = here::here(&quot;OCS_data&quot;, &quot;data&quot;, &quot;wrangled&quot;, &quot;county_info.rda&quot;)) 4.2.1.3 Manually Download Data from GitHub: Download the .RDA files available on the case study GitHub repository from here. The CSV versions of the files may also be downloaded here, if preferred Move the data files from your ‘Downloads’ folder to your R session’s current working directory (you can see what this is with getwd()). Load the RDA files with the following commands: load(file = here::here(&quot;Annual_opioid_data.rda&quot;)) load(file = here::here(&quot;county_info.rda&quot;)) All the data you need to work through the current section is now loaded into your environment. You are ready to work through the section of interest, without needing to work through any of the previous sections. 4.3 Modify a case study The case studies are written in R Markdown documents and developed within an RStudio project. R Markdown documents are denoted with the file extension “.Rmd” and allow for the inclusion of code chunks and outputs in a written report. They are written using Markdown syntax. RStudio projects are used to organize the case studies. The knitr package “knits” the case study written in R Markdown and outputs the document as an HTML file. Open Case Studies uses these HTML files to post the case studies online. The entire case study project is contained in a GitHub repository which allows for easy distribution and version control. GitHub Pages is used to host the case study webpage from the case study repository. Modifying a case study requires the following simple steps: Use the OCSdata package zip_ocs() function to download the case study files without our git history. Alternatively, if you are familiar with GitHub and wish to you can clone or fork the case study repository from GitHub. See this section of chapter 2 for more information. In the repository folder, open the case study .Rproj file to open the project up in RStudio. Edit the sections to be modified in the index.Rmd file. Save your changes, then click on the “Knit” drop down menu in the top left corner of RStudio. Choose which file format you’d like to knit to. Distribute your modified case study as you please! You can share HTML, PDF and Word files directly with your students or you can host your case study for free on GitHub using GitHub pages (“GitHub Pages Documentation” n.d.). To do so, you will need to set up your version of the case study on GitHub. If you are new to GitHub, also be sure to check out Hester (n.d.). These steps are demonstrated in the following video about modifying case studies: 4.4 Create a case study Open Case Studies offers two options for creating a case study. The first method is a template repository available on GitHub. The second is a new live web application. The first option offers more customization, while the second is much more fast and simple. 4.4.1 Template Case Study A template case study is available in a repository on our GitHub page at github.com/opencasestudies/ocs-bp-template. This template contains the basic skeletal structure used for our case studies. Creating a new case study with the template is very similar to modifying an existing case study: Click on the “use this template” button at opencasestudies/ocs-bp-template. Open the index.Rmd file in RStudio. Add the case study content to the index.Rmd file. Use the instructions provided in this file to add different elements such as images and videos. Save your changes and knit the case study to the preferred file format. Distribute the knitted case study as you please! All of these steps are demonstrated in the following video: 4.4.2 MakeCaseStudies App Open Case Studies now also offers the MakeCaseStudies app as an option for our users to create their own case studies. The app has an easy-to-use interface where users can copy and paste their content into text boxes on the “Create” tab and check the “Preview” tab to see what they’ve made so far. Once satisfied, click the download button to export your finished case study! Watch the following video to learn more about creating case studies with the MakeCaseStudies app: If you’d like to learn more about MakeCaseStudies, you can read this thesis by former graduate student Michael Breshock Breshock (2021). 4.5 Session info ## R version 4.0.2 (2020-06-22) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.3 LTS ## ## Matrix products: default ## BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C ## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.24 digest_0.6.25 crayon_1.3.4 R6_2.4.1 ## [5] lifecycle_1.0.0 magrittr_2.0.2 evaluate_0.14 highr_0.8 ## [9] pillar_1.4.6 stringi_1.5.3 rlang_0.4.10 fs_1.5.0 ## [13] jquerylib_0.1.4 vctrs_0.3.4 ellipsis_0.3.1 rmarkdown_2.10 ## [17] tools_4.0.2 stringr_1.4.0 readr_1.4.0 hms_0.5.3 ## [21] yaml_2.2.1 xfun_0.26 compiler_4.0.2 pkgconfig_2.0.3 ## [25] htmltools_0.5.0 ottrpal_0.1.2 knitr_1.33 tibble_3.0.3 References "],["new-case-studies---building-and-contributing.html", "Chapter 5 New Case Studies - Building and Contributing 5.1 Learning Objectives 5.2 Case Study Libraries 5.3 Submission Process 5.4 Offical Case Study Guidelines 5.5 Session info", " Chapter 5 New Case Studies - Building and Contributing 5.1 Learning Objectives In this chapter we will discuss: - Our two case study submission options - The guidelines for how to publish your own case studies as part of our project 5.2 Case Study Libraries To help curate case studies for educators and learners, we would like to encourage others to help us expand our library of case studies. We recognize that other educators may have case studies in various stages of development that could be helpful to others. We hope to facilitate sharing of these case studies on the Open Case Studies project. However, we unfortunately do not have the resources or time to help integrate all case studies we receive into the official Open Case Studies library For this reason, we have outlined the following two modes of submission: Submissions for integration into the official library: With this submission type, the Open Case Studies team will work with you starting from a case study idea through development and peer review stages, with the ultimate goal of adding your case study to the Open Case Studies project. Submissions for a publicly available community repository: We hope to also create a more casual community library that allows others to share their work more easily and quickly. This repository will contain case studies submitted by educators but not included in the official Open Case Studies project library. The submission process is much simpler. 5.3 Submission Process The process of submitting community case studies, involves filling out a simple form. The process of submitting to our official library involves ensuring that your case study meets our more lengthy requirements and a review process. Now we will describe the submission process for each library 5.3.1 Community Library Submissions These case studies will be shared publicly on the Open Case Studies Community Repository for the benefit of other educators and learners, with minimal review from the Open Case Studies team. To submit a case study to the Community Repository, please fill out the form below: OpenCaseStudies Community Repository Submission Form 5.3.2 Official Library Submissions If you have not yet created a case study, but want to create one for our official library, please complete the form below to contact the Open Case Studies team regarding a new case study idea. The team will get back to do as soon as we can. Name: Email: Case study title (tentative): Case study description: Dataset description: Statistics learning goals for the case study: Data science learning goals for the case study: Send Ultimately your case study will be submitted using an issue template to the GitHub repository for this guide, located at this link. 5.4 Offical Case Study Guidelines To ensure that the submitted case studies provide the most benefit to the community, we hope that they adhere as much as possible to the core structure and ideas of the Open Case Studies project. We provide the guidelines detailed below for submission to the official library. Furthermore, because the Open Case Studies team does not have the infrastructure to perform a full content review of submitted case studies, we ask that you find at least two independent reviewers to comment about the validity of the content and conclusions presented in your case study. Programming language: Case studies should be written in open source programming languages (such as R or python). Data: Case studies should use data that is publicly available or can be made publicly available. Please ensure that you are allowed to make the data public if it is not already. Transparent descriptions of data sources and how data was generated should be included when possible. Core sections: all case studies should include the following sections consistent with the published case studies. See Chapter 1, Case Study Anatomy for a detailed description on what each section should include: Getting Started: Case study context, Study motivation, Main question, Learning objectives, Study limitations. This section will outline previous literature and overarching questions in the field that make this case study question important, providing motivation for conducting the analysis in the case study. It will specify the exact question that the case study endeavors to address as well as the defining the statistical and data analysis learning objectives for the case study. It will also discuss the limitations of the investigation that may prevent the analysis from answering the main question of interest. Analyzing the Data: Data description, Import and exploration, Wrangling, Visualization, Analysis. This section includes the bulk of the data analysis, beginning with a detailed description of the data used in the case study, how it was generated, and where it was obtained. Then it walks through, step-by-step, the data import, exploration, wrangling, procedures. Finally, it demonstrates the visualization and statistical analysis steps used to address the case study question. Wrapping-up: Analysis conclusions, Case study summary, Next steps, Homework, Additional information. This section synthesized conclusions to the main study question based on the data analysis results demonstrated in the previous sections. It summarizes the analysis steps and potential next steps for further exploration, which can be suggested as homework. If applicable, additional information relevant to further study can be provided here. Content: Despite often being motivated by articles, case studies are not intended to demonstrate the methods of a paper - they are intended as an educational resource where users are guided through the data science process. Links to literature or other sources to motivate the scientific topic of the case study should be included where possible. Case studies should aim to describe the decision making process involved in performing data science related tasks. Attribution: all outside resources used in the case study should be referenced appropriately. Case studies should include disclaimers and appropriate license agreements. All included images (that are not original to the case study) should include relevant sources. Data: All data files should be saved in a folder named “data” within the project directory. All files should be contained in a sub-folder using the design scheme outlined in this diagram: This diagram is from former graduate student Michael Breshock’s thesis on the Open Case Studies. In this thesis you can find a detailed description on the organization and structure of the case study data files Breshock (2021). The data folder is required to have at least raw, imported, and wrangled data files. This allows users to skip sections when convenient. The raw data folder consists of data files as they came from the source. These are used at the beginning of the case study analysis at the Data Import section. Imported data is the version of the data after it has already been imported into R. These should be in the form of R Data files (extensions include .RData, .Rda, and .Rds). To create these files, use the save() function in R after importing the raw data. Wrangled data is the version of the data after it has been cleaned and is ready for analysis. Use the save() function in R after wrangling the data to create these files. This data should be provided in both RDA and CSV format. The next two data sub-folders are optional and used as needed: If the raw data files for your case study come in a format that requires a complicated data import process (such as web scraping) you may consider providing the raw data in an import friendly format such as CSV or XLS(X). Place these files in the “simpler_import” sub-folder. If there are any raw data files from your source that are not used in the case study analysis, but could be analyzed in a similar fashion, please include these in the “extra” sub-folder. 5.5 Session info ## R version 4.0.2 (2020-06-22) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.3 LTS ## ## Matrix products: default ## BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C ## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.24 digest_0.6.25 crayon_1.3.4 R6_2.4.1 ## [5] lifecycle_1.0.0 magrittr_2.0.2 evaluate_0.14 highr_0.8 ## [9] pillar_1.4.6 stringi_1.5.3 rlang_0.4.10 fs_1.5.0 ## [13] jquerylib_0.1.4 vctrs_0.3.4 ellipsis_0.3.1 rmarkdown_2.10 ## [17] tools_4.0.2 stringr_1.4.0 readr_1.4.0 hms_0.5.3 ## [21] yaml_2.2.1 xfun_0.26 compiler_4.0.2 pkgconfig_2.0.3 ## [25] htmltools_0.5.0 ottrpal_0.1.2 knitr_1.33 tibble_3.0.3 References "],["about-the-authors.html", "About the Authors", " About the Authors These credits are based on our course contributors table guidelines.     Credits Names Pedagogy Lead Content Instructor(s) Carrie Wright and Stephanie Hicks Lecturer(s) Michael Breshock and Qier Meng Content Author(s) Michael Breshock, Lyla Atta and Carrie Wright Content Director(s) Carrie Wright and Stephanie Hicks Acknowledgments Shannon Ellis, Jeff Leek, and Roger Peng - Thank you for your resources on your uses of case studies from OCS! Production Content Publisher(s) Ira Gooding Content Publishing Reviewer(s) Ira Gooding Technical Course Publishing Engineer(s) Carrie Wright, Candace Savonen Template Publishing Engineers Candace Savonen, Carrie Wright Publishing Maintenance Engineer Candace Savonen Technical Publishing Stylists Carrie Wright, Candace Savonen Package Developers (ottr) John Muschelli, Candace Savonen, Carrie Wright Art and Design Illustrator(s) Lyla Atta, Carrie Wright, and Michael Breshock Videographer(s) Michael Breshock and Qier Meng Videography Editor(s) Michael Breshock and Lyla Atta Funding Funder(s) This guide was funded as an extension to funding for the Genomic Data Science Community Network (GDSCN). The GDSCN is supported through a contract to Johns Hopkins University (75N92020P00235) NHGRI. Funding Staff Jennifer Vessio   ## ─ Session info ─────────────────────────────────────────────────────────────── ## setting value ## version R version 4.0.2 (2020-06-22) ## os Ubuntu 20.04.3 LTS ## system x86_64, linux-gnu ## ui X11 ## language (EN) ## collate en_US.UTF-8 ## ctype en_US.UTF-8 ## tz Etc/UTC ## date 2022-03-25 ## ## ─ Packages ─────────────────────────────────────────────────────────────────── ## package * version date lib source ## assertthat 0.2.1 2019-03-21 [1] RSPM (R 4.0.3) ## bookdown 0.24 2022-02-15 [1] Github (rstudio/bookdown@88bc4ea) ## callr 3.4.4 2020-09-07 [1] RSPM (R 4.0.2) ## cli 2.0.2 2020-02-28 [1] RSPM (R 4.0.0) ## crayon 1.3.4 2017-09-16 [1] RSPM (R 4.0.0) ## desc 1.2.0 2018-05-01 [1] RSPM (R 4.0.3) ## devtools 2.3.2 2020-09-18 [1] RSPM (R 4.0.3) ## digest 0.6.25 2020-02-23 [1] RSPM (R 4.0.0) ## ellipsis 0.3.1 2020-05-15 [1] RSPM (R 4.0.3) ## evaluate 0.14 2019-05-28 [1] RSPM (R 4.0.3) ## fansi 0.4.1 2020-01-08 [1] RSPM (R 4.0.0) ## fs 1.5.0 2020-07-31 [1] RSPM (R 4.0.3) ## glue 1.6.1 2022-01-22 [1] CRAN (R 4.0.2) ## hms 0.5.3 2020-01-08 [1] RSPM (R 4.0.0) ## htmltools 0.5.0 2020-06-16 [1] RSPM (R 4.0.1) ## jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.0.2) ## knitr 1.33 2022-02-15 [1] Github (yihui/knitr@a1052d1) ## lifecycle 1.0.0 2021-02-15 [1] CRAN (R 4.0.2) ## magrittr 2.0.2 2022-01-26 [1] CRAN (R 4.0.2) ## memoise 1.1.0 2017-04-21 [1] RSPM (R 4.0.0) ## ottrpal 0.1.2 2022-02-15 [1] Github (jhudsl/ottrpal@1018848) ## pillar 1.4.6 2020-07-10 [1] RSPM (R 4.0.2) ## pkgbuild 1.1.0 2020-07-13 [1] RSPM (R 4.0.2) ## pkgconfig 2.0.3 2019-09-22 [1] RSPM (R 4.0.3) ## pkgload 1.1.0 2020-05-29 [1] RSPM (R 4.0.3) ## prettyunits 1.1.1 2020-01-24 [1] RSPM (R 4.0.3) ## processx 3.4.4 2020-09-03 [1] RSPM (R 4.0.2) ## ps 1.3.4 2020-08-11 [1] RSPM (R 4.0.2) ## purrr 0.3.4 2020-04-17 [1] RSPM (R 4.0.3) ## R6 2.4.1 2019-11-12 [1] RSPM (R 4.0.0) ## readr 1.4.0 2020-10-05 [1] RSPM (R 4.0.2) ## remotes 2.2.0 2020-07-21 [1] RSPM (R 4.0.3) ## rlang 0.4.10 2022-02-15 [1] Github (r-lib/rlang@f0c9be5) ## rmarkdown 2.10 2022-02-15 [1] Github (rstudio/rmarkdown@02d3c25) ## rprojroot 2.0.2 2020-11-15 [1] CRAN (R 4.0.2) ## sessioninfo 1.1.1 2018-11-05 [1] RSPM (R 4.0.3) ## stringi 1.5.3 2020-09-09 [1] RSPM (R 4.0.3) ## stringr 1.4.0 2019-02-10 [1] RSPM (R 4.0.3) ## testthat 3.0.1 2022-02-15 [1] Github (R-lib/testthat@e99155a) ## tibble 3.0.3 2020-07-10 [1] RSPM (R 4.0.2) ## usethis 2.1.5.9000 2022-02-15 [1] Github (r-lib/usethis@57b109a) ## vctrs 0.3.4 2020-08-29 [1] RSPM (R 4.0.2) ## withr 2.3.0 2020-09-22 [1] RSPM (R 4.0.2) ## xfun 0.26 2022-02-15 [1] Github (yihui/xfun@74c2a66) ## yaml 2.2.1 2020-02-01 [1] RSPM (R 4.0.3) ## ## [1] /usr/local/lib/R/site-library ## [2] /usr/local/lib/R/library "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
